*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}


:root{
    --ff-heading: 'Epilogue', sans-serif;
    --ff-texting: 'Open sans', sans-serif;

    --hue: 250;
    --bg-primary: hsl(var(--hue), 22%, 20%);
    --fc-primary: hsl(var(--hue), 0%, 100%);
    --fc-secondary: hsl(var(--hue), 50%, 80%);
    --fc-secondary-dark: hsl(var(--hue), 100%, 11%);


    font-size: 62.5%;

    --fs-body: 1.6rem;
    --fs-heading: 4rem;
}

body{
    font-family: var(--ff-texting);

    background-color: var(--bg-primary);
    color: var(--fc-primary);
}

.page{
    max-width: 33rem;
    margin: 0 auto;
}



img{
    width: 100%;
    height: auto;
}

header{
    margin: 10rem 0 8rem;
    font-family: var(--ff-heading);
    text-align: center;
}

header p{
    color: var(--fc-secondary);
    text-transform: uppercase;

    line-height: 3.2rem;
    letter-spacing: 3px;
    font-weight: 400;


    margin-bottom: 1.7rem;
}

header h1{
    font-size: var(--fs-heading);
    line-height: 4.8rem;

    font-weight: 800;

}
 
main{
    display: grid;
    gap: 3.2rem;
}

/* o position absolute dentro dele será relativo ao cartão */
.card{
    position: relative;
}

.card img{
    height: 41.6rem;
    object-fit: cover;

    border-radius: 6px;

    transition: all 200ms;
}

.card img:hover{
    transform: scale(1.1);
    opacity: 0.4;
}

.card h2{
    position: absolute;
    bottom: 5.2rem;
    left: 2.8rem;
    font-size: var(--fs-heading);
    font-weight: 800;

    /* Para realizar a quebra de linha */
    display: flex;
    flex-direction: column;
    gap: 2.8rem;
}

.card h2 span{
    border-radius: 2rem;
    font-size: var(--fs-body);
    font-weight: 400;
    background-color: var(--fc-primary);
    color: var(--fc-secondary-dark);

    padding: 0 1.6rem;
    /* o width se alinha ao conteúdo */
    width: fit-content;
    height: 3.8rem;

    /* Usamos essa propriedade pois o span é um display block e não permite usar propriedades como height. Porém com o display: inline-flex essa propriedade é destravada e permite ainda que se utilize o align-itens para centralização dos itens */

    display: inline-flex;
    align-items: center;
}

/* Qual tag receberá a animação */

header{
    animation: topdown 700ms;
    

}

/* o Primeiro tempo é o time da animação no geral, o segundo é o delay */

main{
    animation: downtop 700ms 350ms backwards;
}

/* A animação sempre volta para o estado original da tag, nesse caso a tag header volta ao seu estado original, a não ser que seja especificado que termine em outro ponto da timeline da animação */

@keyframes topdown{
    0%{
        opacity: 0;
        /* Significa que a página vai subir o eixo  Y (de cima para baixo, como puxar uma corda) */
        transform: translateY(-15px);
    }


    100%{
        opacity: 1;
        /* Signfica que a página vai voltar para posição original */
        transform: translateY(0);
    }
}


@keyframes downtop{
    0%{
        opacity: 0;
        transform: translateY(15px);
    }


    100%{
        opacity: 1;
        transform: translateY(0);
    }
}